labels = letters[1:length(outlier_list)] %>% project_case())
# Save the file in .png file
hypo_save(filename = paste0(path, name, ".png"),
plot = p_single,
width = 12,
height = 8)
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'transparent', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = ifelse(row_number(desc(gxp_snp$LOG_P)) <= 5, "red", gxp_clr)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), "red", gxp_clr) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = ifelse(gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5, "red", gxp_clr))) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = ifelse(gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), "red", gxp_clr)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), "red") +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), size = 0.2,
col = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, label = RANGE), size = 0.2,
col = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5)) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", "black"), label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = gxp_clr) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
View(plot_panel_gxp_snp)
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", "black"), label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c("red",gxp_clr)) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5), aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE), segment.color = 'red', color = "Red", size=1, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', color = "Red", size=0.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', segment.size = 0.5, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
warnings()
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
save_snp <- function (lg, start, end, outlier_id, ...) {
# Create table with most associated SNPs of the most associated 5okb regions
data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%
filter(row_number(desc(LOG_P)) <= 5) %>%
dplyr::summarise(CHROM = CHROM, POS = POS, LOG_P = LOG_P, WEIGHTS = WEIGHTS, RUN = RUN, RANGE = RANGE, GSTART = GSTART, MID_POS = MID_POS, BIN_START = BIN_START, BIN_END = BIN_END) %>%
mutate(ID = outlier_id)
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.01) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 3) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0, shape = 16) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.3) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.1) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.1, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', segment.size = 0.05, color = "Red", size=1.2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', segment.size = 0.05, color = "Red", size=2, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', segment.size = 0.05, color = "Red", size=1.7, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
plot_panel_gxp_snp <- function (lg, start, end, trait, ...) {
# Plot gxp results snp-by-snp
ggplot2::ggplot() +
geom_rect(inherit.aes = FALSE, data = tibble(start = start,end = end), aes(xmin = start, xmax = end),
ymin = -Inf, ymax = Inf, fill = rgb(0.9, 0.9, 0.9, 0.3), color = rgb(0.9, 0.9, 0.9, 0.9)) +
geom_point(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25),
aes(x = MID_POS, y = LOG_P, color = ifelse(row_number(desc(LOG_P)) <= 5, "red", gxp_clr), label = RANGE), size = 0.1, stroke = 0.2) +
geom_text_repel(data = gxp_snp %>% filter(CHROM == lg, MID_POS > start - window_buffer * 1.25, MID_POS < end + window_buffer * 1.25) %>%  filter(row_number(desc(LOG_P)) <= 5),
aes(x = MID_POS, y = LOG_P, color = RUN, label = RANGE),
segment.color = 'red', min.segment.length = 0.5, segment.size = 0.05, color = "Red", size=1.7, hjust = -1, nudge_x = -1.5) +
scale_color_manual(name = "GxP Trait", values = c(gxp_clr, "red")) +
scale_x_continuous(name = lg, expand = c(0, 0), position = "top") +
scale_y_continuous(name = expression(bolditalic(-log[10](p))),expand = c(0, 0)) +
guides(color = guide_legend(keyheight = unit(3,"pt"), keywidth = unit(20, "pt"), override.aes = list(size = 2))) +
theme_panels()
}
# Call the plot function with parameters and files of interest
plot_regions(region_table, outlier_pick, region_label_tibbles, figure_path, pc)
# Clear the work space
rm(list = ls())
# Load needed library
library(stringr)
library(ggplot2)
library(grid)
library(gridExtra)
library(ggtext)
library(hypoimg)
pca_results <- read.csv('/Users/fco/Desktop/PhD/1_CHAPTER1/1_GENETICS/chapter1/metadata/LAB_bodym_left_54off_59on_PCs.csv', sep = ";")
View(pca_results)
